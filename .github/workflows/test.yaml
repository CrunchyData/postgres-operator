name: Tests

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  go-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.x
      - run: make check
      - run: make check-generate

  kubernetes-api:
    runs-on: ubuntu-latest
    needs: [go-test]
    strategy:
      fail-fast: false
      matrix:
        kubernetes: [default]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with: { go-version: 1.x }
      - run: go mod download
      - env: { KUBERNETES: "${{ matrix.kubernetes }}" }
        run: ENVTEST_K8S_VERSION="${KUBERNETES#default}" make check-envtest

  kubernetes-k3d:
    if: "${{ github.repository == 'CrunchyData/postgres-operator' }}"
    runs-on: ubuntu-latest
    needs: [go-test]
    strategy:
      fail-fast: false
      matrix:
        kubernetes: [latest, v1.19]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with: { go-version: 1.x }

      - name: Install k3d
        # Git tag from https://github.com/rancher/k3d/releases or "latest"
        env: { K3D_TAG: latest }
        run: |
          curl --fail --silent https://raw.githubusercontent.com/rancher/k3d/main/install.sh |
            TAG="${K3D_TAG#latest}" bash && k3d version | head -n1

      - name: Start k3s
        # https://rancher.com/docs/k3s/latest/en/upgrades/basic/#release-channels
        env: { K3S_CHANNEL: "${{ matrix.kubernetes }}" }
        run: k3d cluster create --image="+${K3S_CHANNEL}" --no-lb --timeout=2m --wait

      - name: Prefetch container images
        run: |
          {
            echo '"registry.developers.crunchydata.com/crunchydata/crunchy-postgres:centos8-13.5-0"'
            echo '"registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:centos8-2.36-0"'
            echo '"registry.developers.crunchydata.com/crunchydata/crunchy-pgbouncer:centos8-1.16-0"'
          } |
          jq --slurp --arg name 'image-prefetch' --argjson labels '{"name":"image-prefetch"}' '{
            apiVersion: "apps/v1", kind: "DaemonSet",
            metadata: { name: $name, labels: $labels },
            spec: {
              selector: { matchLabels: $labels },
              template: {
                metadata: { labels: $labels },
                spec: {
                  initContainers: to_entries | map({ name: "c\(.key)", command: ["true"], image: .value }),
                  containers: [{ name: "pause", image: "k8s.gcr.io/pause:3.5" }]
                }
              }
            }
          }' |
          kubectl create --filename=- && {
            kubectl rollout status daemonset.apps/image-prefetch --timeout=90s ||
            kubectl describe daemonset.apps/image-prefetch
          }
      - env: { PGO_TEST_TIMEOUT_SCALE: 1.2 }
        run: make createnamespaces check-envtest-existing
