{
    "kind": "Deployment",
    "apiVersion": "apps/v1",
    "metadata": {
        "name": "{{.Name}}",
        "labels": {
            "vendor": "crunchydata",
            "pgo-pg-database": "true",
            {{.DeploymentLabels }}
        }
    },
    "spec": {
        "replicas": {{.Replicas}},
        "selector": {
		"matchLabels": {
		    "vendor": "crunchydata",
		    {{.DeploymentLabels }}
		}
        },
        "template": {
            "metadata": {
                "labels": {
                    "name": "{{.Name}}",
                    "vendor": "crunchydata",
                    "pgo-pg-database": "true",
                    {{.PodLabels }}
                }
            },
            "spec": {

                {{.SecurityContext }}
                "serviceAccountName": "pgo-pg",
                "containers": [
        

            {
                    "name": "database",
                    "image": "{{.CCPImagePrefix}}/{{.CCPImage}}:{{.CCPImageTag}}",
                    "readinessProbe": {
                        "exec": {
                            "command": [
                                "/bin/bash",
                                "-c",
                                "[[ -f '/crunchyadm/pgha_initialized' ]]",
                                "&& pg_isready -h /crunchyadm -U crunchyready"
                             ]
                        },
                        "initialDelaySeconds": 15,
                        "timeoutSeconds": 8
                    },

            {{.ContainerResources }}

                    "env": [{
                        "name": "PGHA_PG_PORT",
                        "value": "{{.Port}}"
                    }, {
                        "name": "PGHA_USER",
                        "value": "postgres"
                    },
                    {{if .IsInit}}
                    {
                        "name": "PGHA_INIT",
                        "valueFrom": {
                            "configMapKeyRef": {
                               "name": "{{.ClusterName}}-pgha-default-config",
                               "key": "init"
                            }
                         }
                    }, 
                    {{ end }}
                    {{if not .IsInit}}
                    {
                        "name": "PGHA_PRIMARY_HOST",
                        "value": "{{.ClusterName}}"
                    }, 
                    {{ end }}
                    {
                        "name": "PATRONI_POSTGRESQL_DATA_DIR",
                        "value": "/pgdata/{{.Name}}"
                    }, {
			{{.PgmonitorEnvVars}}
            {{.PgbackrestEnvVars}}
            {{.PgbackrestS3EnvVars}}
                        "name": "PGHA_DATABASE",
                        "value": "{{.Database}}"
                    }, {
                        "name": "PATRONI_KUBERNETES_NAMESPACE",
                        "valueFrom": {
                            "fieldRef": {
                                "fieldPath": "metadata.namespace"
                            }
                        }
                    },  {
                        "name": "PATRONI_KUBERNETES_SCOPE_LABEL",
                        "value": "{{.ScopeLabel}}"
                    },  {
                        "name": "PATRONI_SCOPE",
                        "valueFrom": {
                            "fieldRef": {
                                "fieldPath": "metadata.labels['{{.ScopeLabel}}']"
                            }
                        }
                    }, {
                        "name": "PATRONI_KUBERNETES_LABELS",
                        "value": "{vendor: \"crunchydata\"}"
                    }, {
                        "name": "PATRONI_LOG_LEVEL",
                        "value": "INFO"
                    }, {
                        "name": "PGHOST",
                        "value": "/tmp"
                    }],


                    "volumeMounts": [{
                            "mountPath": "/pgdata",
                            "name": "pgdata",
                            "readOnly": false
                        }, {
                            "mountPath": "/backrestrepo",
                            "name": "backrestrepo"
                        }, {
                            "mountPath": "/pgconf/pguser",
                            "name": "user-volume"
                        }, {
                            "mountPath": "/pgconf/pgreplicator",
                            "name": "primary-volume"
                        }, {
                            "mountPath": "/pgconf/pgsuper",
                            "name": "root-volume"
                        }, {
                            "mountPath": "/pgwal",
                            "name": "pgwal-volume"
                        }, {
                            "mountPath": "/sshd",
                            "name": "sshd",
                            "readOnly": true
                        }, {
                            "mountPath": "/pgconf",
                            "name": "pgconf-volume"
                        }, {
                            "mountPath": "/recover",
                            "name": "recover-volume"
                        }
                        
                    ],

                    "ports": [{
                        "containerPort": 5432,
                        "protocol": "TCP"
                    }, {
                        "containerPort": 8009,
                        "protocol": "TCP"
                    }],
                    "resources": {},
                    "imagePullPolicy": "IfNotPresent"
                }

                {{.CollectAddon }}

                {{.BadgerAddon }}

		],
                "volumes": [{
                        "name": "pgdata",
                        {{.PVCName}}
                    }, {
                        "name": "user-volume",
                        "secret": {
                            "secretName": "{{.UserSecretName}}"
                        }
                    }, {
                        "name": "primary-volume",
                        "secret": {
                            "secretName": "{{.PrimarySecretName}}"
                        }
                    }, {
                        "name": "collect-volume",
                        {{.CollectVolume}}
                    }, {
                        "name": "sshd",
                        "secret": {
                            "secretName": "{{.ClusterName}}-backrest-repo-config",
			    "defaultMode": 511
                        }
                    }, {
                        "name": "root-volume",
                        "secret": {
                            "secretName": "{{.RootSecretName}}"
                        }
                    }, {
                        "name": "pgwal-volume",
            "emptyDir": { "medium": "Memory" }
                    }, {
                        "name": "recover-volume",
            "emptyDir": { "medium": "Memory" }
                    }, {
                        "name": "report",
            "emptyDir": { "medium": "Memory" }
                    }, {
                        "name": "backrestrepo",
            "emptyDir": { "medium": "Memory" }
                    }, {
                        "name": "pgconf-volume",
                        "projected": {
                            "sources": [
                                {{if .ConfVolume}}
                                {
                                    "configMap": { 
                                        "name": {{.ConfVolume}}
                                    }
                                },
                                {{end}}
                                {
                                    "configMap": { 
                                        "name": "{{.ClusterName}}-pgha-default-config",
                                        "optional": true
                                    }
                                }
                            ]
                         }
                    }

                ],

        {{.NodeSelector}}

                "restartPolicy": "Always",
                "dnsPolicy": "ClusterFirst"
            }
        },
        "strategy": {
            "type": "RollingUpdate",
            "rollingUpdate": {
                "maxUnavailable": 1,
                "maxSurge": 1
            }
        }
    }
}
