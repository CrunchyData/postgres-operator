<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Crunchy Data Postgres Operator on Crunchy Data PostgreSQL Operator Documentation</title>
    <link>https://crunchydata.github.io/postgres-operator/latest/</link>
    <description>Recent content in Crunchy Data Postgres Operator on Crunchy Data PostgreSQL Operator Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://crunchydata.github.io/postgres-operator/latest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PGO-CLI</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/cli-and-example/pgo-cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/cli-and-example/pgo-cli/</guid>
      <description>pgo CLI The command line tool, pgo, is used to interact with the Postgres Operator.
Most users will work with the Operator using the pgo CLI tool. That tool is downloaded from the Github Releases page for the Operator (https://github.com/crunchydata/postgres-operator/releases).
The pgo client is provided in Mac, Windows, and Linux binary formats, download the appropriate client to your local laptop or workstation to work with a remote Operator.
Syntax Use the following syntax to run pgo commands from your terminal window:</description>
    </item>
    
    <item>
      <title>Install</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/installation/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/installation/installation/</guid>
      <description>Operator Installation A full installation of the Operator includes the following steps:
 create a project structure configure your environment variables configure Operator templates create security resources deploy the operator install pgo CLI (end user command tool)  Operator end-users are only required to install the pgo CLI client on their host and can skip the server-side installation steps.
The Operator can also be deployed with a sample Helm chart and also a quickstart script.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/configuration/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/configuration/configuration/</guid>
      <description>Configuration The operator is template-driven; this makes it simple to configure both the client and the operator.
conf Directory The Operator is configured with a collection of files found in the conf directory. These configuration files are deployed to your Kubernetes cluster when the Operator is deployed. Changes made to any of these configuration files currently require a redeployment of the Operator on the Kubernetes cluster.
The server components of the Operator include Role Based Access Control resources which need to be created a single time by a Kubernetes cluster-admin user.</description>
    </item>
    
    <item>
      <title>PGO YAML</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/configuration/pgo-yaml-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/configuration/pgo-yaml-configuration/</guid>
      <description>pgo.yaml Configuration The pgo.yaml file contains many different configuration settings as described in this section of the documentation.
The pgo.yaml file is broken into major sections as described below:
Cluster    Setting Definition     BasicAuth if set to true will enable Basic Authentication   PrimaryNodeLabel newly created primary deployments will specify this node label if specified, unless you override it using the &amp;ndash;node-label command line flag, if not set, no node label is specifed   ReplicaNodeLabel newly created replica deployments will specify this node label if specified, unless you override it using the &amp;ndash;node-label command line flag, if not set, no node label is specifed   CCPImageTag newly created containers will be based on this image version (e.</description>
    </item>
    
    <item>
      <title>Security</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/security/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/security/security/</guid>
      <description>Security Kubernetes RBAC Install the requisite Operator RBAC resources, as a Kubernetes cluster admin user, by running a Makefile target:
make installrbac  This script creates the following RBAC resources on your Kubernetes cluster:
   Setting Definition     Custom Resource Definitions pgbackups    pgclusters    pgpolicies    pgreplicas    pgtasks    pgupgrades   Cluster Roles pgopclusterrole    pgopclusterrolecrd    scheduler-sa   Cluster Role Bindings pgopclusterbinding    pgopclusterbindingcrd    scheduler-sa   Service Account scheduler-sa    postgres-operator    pgo-backrest    scheduler-sa   Roles pgo-role    pgo-backrest-role   Role Bindings pgo-backrest-role-binding    Operator RBAC The conf/postgresql-operator/pgorole file is read at start up time when the operator is deployed to the Kubernetes cluster.</description>
    </item>
    
    <item>
      <title>Design</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/design/design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/design/design/</guid>
      <description>Design Provisioning So, what does the Postgres Operator actually deploy when you create a cluster?
Reference
On this diagram, objects with dashed lines are components that are optionally deployed as part of a PostgreSQL Cluster by the operator. Objects with solid lines are the fundamental and required components.
For example, within the Primary Deployment, the metrics container is completely optional. That component can be deployed using either the operator configuration or command line arguments if you want to cause metrics to be collected from the Postgres container.</description>
    </item>
    
    <item>
      <title>Develop</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/developer-setup/developing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/developer-setup/developing/</guid>
      <description>Developing The Operator is an open source project hosted on github (https://github.com/crunchydata/postgres-operator)
Developers that wish to build the Operator from source or contribute to the project via pull requests would set up a development environment as follows:
Create Kubernetes Cluster We use either Openshift Container Platform or kubeadm to install our development clusters, we currently develop and test on CentOS and RHEL hosts. Each of those installation methods are documented on the respective project&amp;rsquo;s sites.</description>
    </item>
    
    <item>
      <title>Upgrading</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/upgrade/upgrading/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/upgrade/upgrading/</guid>
      <description>Upgrading the Operator Various Operator releases will require action by the Operator administrator of your organization in order to upgrade to the next release of the Operator. Some upgrade steps are automated within the Operator but not all are possible at this time.
This section of the documentation shows specific steps required to the latest version from the previous version.
Upgrading to Version 3.5.0 From Previous Versions  the pgingest CRD is removed, you will need to manually remove it from any deployments of the operator after upgrading to this version, this includes removing ingest related permissions from the pgorole file, the API server also removes the ingest related API endpoints primary and replica labels are only applicable at cluster creation and not updated after a cluster has executed a failover, a new service-name label is applied to PG cluster components to indidate whether a deployment/pod is a primary or replica, service-name is also the label now used by the cluster services to route with.</description>
    </item>
    
    <item>
      <title>Contributing</title>
      <link>https://crunchydata.github.io/postgres-operator/latest/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://crunchydata.github.io/postgres-operator/latest/contributing/</guid>
      <description>Getting Started Welcome! Thank you for your interest in contributing. Before submitting a new issue or pull request to the Crunchy Data PostgreSQL Operator project on GitHub, please review any open or closed issues here in addition to any existing open pull requests.
Documentation The documentation website (located at https://crunchydata.github.io/postgres-operator/) is generated using Hugo and GitHub Pages. If you would like to build the documentation locally, view the official Installing Hugo guide to set up Hugo locally.</description>
    </item>
    
  </channel>
</rss>