# This list of transform statements configures an OTel Transform Processor to
# parse pgbackrest logs.
#
# https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/-/processor/transformprocessor#readme

- statements:
    - set(instrumentation_scope.name, "pgbackrest")
    - set(instrumentation_scope.schema_url, "https://opentelemetry.io/schemas/1.29.0")

    # Regex the pgbackrest log to capture the following groups:
    # 1) the timestamp (form YYYY-MM-DD HH:MM:SS.sss)
    # 2) the process id (form `P` + 2 or 3 digits)
    # 3) the log level (form INFO, WARN, etc.)
    # 4) the message (anything else, including newline -- we can do this because we have a multiline block on the receiver)
    - >-
      merge_maps(log.cache,
      ExtractPatterns(log.body, "^(?<timestamp>\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{3}) (?<process_id>P\\d{2,3})\\s*(?<error_severity>\\S*): (?<message>(?s).*)$"),
      "insert")
      where Len(log.body) > 0

    # The log severity is the "error_severity" field.
    # https://opentelemetry.io/docs/specs/otel/logs/data-model/#field-severitytext
    # https://pgbackrest.org/configuration.html#section-log/option-log-level-file
    - set(log.severity_text, log.cache["error_severity"]) where IsString(log.cache["error_severity"])
    - set(log.severity_number, SEVERITY_NUMBER_TRACE) where log.severity_text == "TRACE"
    - set(log.severity_number, SEVERITY_NUMBER_DEBUG) where log.severity_text == "DEBUG"
    - set(log.severity_number, SEVERITY_NUMBER_DEBUG2) where log.severity_text == "DETAIL"
    - set(log.severity_number, SEVERITY_NUMBER_INFO) where log.severity_text == "INFO"
    - set(log.severity_number, SEVERITY_NUMBER_WARN) where log.severity_text == "WARN"
    - set(log.severity_number, SEVERITY_NUMBER_ERROR) where log.severity_text == "ERROR"

    # https://opentelemetry.io/docs/specs/otel/logs/data-model/#field-timestamp
    - set(log.time, Time(log.cache["timestamp"], "%Y-%m-%d %H:%M:%S.%L")) where IsString(log.cache["timestamp"])

    # https://github.com/open-telemetry/semantic-conventions/blob/v1.29.0/docs/attributes-registry/process.md
    - set(log.attributes["process.pid"], log.cache["process_id"])

    # Keep the unparsed log record in a standard attribute,
    # and replace the log record log.body with the message field.
    # https://github.com/open-telemetry/semantic-conventions/blob/v1.29.0/docs/general/logs.md
    - set(log.attributes["log.record.original"], log.body)
    - set(log.body, log.cache["message"])
