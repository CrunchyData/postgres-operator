# This list of queries configures an OTel SQL Query Receiver to read pgMonitor
# metrics from PgBouncer.
#
# https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/-/receiver/sqlqueryreceiver#metrics-queries
# https://github.com/CrunchyData/pgmonitor/blob/v5.1.1/sql_exporter/common/crunchy_pgbouncer_121_collector.yml

  - sql: "SHOW CLIENTS;"
    metrics:
      - metric_name: ccp_pgbouncer_clients_wait_seconds
        value_column: wait
        attribute_columns: ["database", "user", "state", "application_name", "link"]
        description: "Current waiting time in seconds"

  # NOTE: Avoid collecting/using "host", "force_user", and "pool_mode" columns because they 
  # can be NULL; the collector will warn against NULL even when not used. But it will emit
  # an error log if those columns are used.
  # The host column should always point either to pgBouncer's virtual database (the null case) or to the primary.
  - sql: "SHOW DATABASES;"
    metrics:
      - metric_name: ccp_pgbouncer_databases_pool_size
        value_column: pool_size
        attribute_columns: ["name", "port", "database"]
        description: "Maximum number of server connections"

      - metric_name: ccp_pgbouncer_databases_min_pool_size
        value_column: min_pool_size
        attribute_columns: ["name", "port", "database"]
        description: "Minimum number of server connections"

      - metric_name: ccp_pgbouncer_databases_reserve_pool_size
        value_column: reserve_pool_size
        attribute_columns: ["name", "port", "database"]
        description: "Maximum number of additional connections for this database"

      - metric_name: ccp_pgbouncer_databases_max_connections
        value_column: max_connections
        attribute_columns: ["name", "port", "database"]
        description: >-
          Maximum number of allowed connections for this database,
          as set by max_db_connections, either globally or per database

      - metric_name: ccp_pgbouncer_databases_current_connections
        value_column: current_connections
        attribute_columns: ["name", "port", "database"]
        description: "Current number of connections for this database"

      - metric_name: ccp_pgbouncer_databases_paused
        value_column: paused
        attribute_columns: ["name", "port", "database"]
        description: "1 if this database is currently paused, else 0"

      - metric_name: ccp_pgbouncer_databases_disabled
        value_column: disabled
        attribute_columns: ["name", "port", "database"]
        description: "1 if this database is currently disabled, else 0"

  - sql: "SHOW LISTS;"
    metrics:
      - metric_name: ccp_pgbouncer_lists_item_count
        value_column: items
        attribute_columns: ["list"]
        description: "Count of items registered with pgBouncer"

  - sql: "SHOW POOLS;"
    metrics:
      - metric_name: ccp_pgbouncer_pools_client_active
        value_column: cl_active
        attribute_columns: ["database", "user"]
        description: >-
          Client connections that are either linked to server connections or
          are idle with no queries waiting to be processed

      - metric_name: ccp_pgbouncer_pools_client_waiting
        value_column: cl_waiting
        attribute_columns: ["database", "user"]
        description: "Client connections that have sent queries but have not yet got a server connection"

      - metric_name: ccp_pgbouncer_pools_server_active
        value_column: sv_active
        attribute_columns: ["database", "user"]
        description: "Server connections that are linked to a client"

      - metric_name: ccp_pgbouncer_pools_server_idle
        value_column: sv_idle
        attribute_columns: ["database", "user"]
        description: "Server connections that are unused and immediately usable for client queries"

      - metric_name: ccp_pgbouncer_pools_server_used
        value_column: sv_used
        attribute_columns: ["database", "user"]
        description: >-
          Server connections that have been idle for more than server_check_delay,
          so they need server_check_query to run on them before they can be used again

  - sql: "SHOW SERVERS;"
    metrics:
      - metric_name: ccp_pgbouncer_servers_close_needed
        value_column: close_needed
        attribute_columns: ["database", "user", "state", "application_name", "link"]
        description: >-
          1 if the connection will be closed as soon as possible,
          because a configuration file reload or DNS update changed the connection information
          or RECONNECT was issued
