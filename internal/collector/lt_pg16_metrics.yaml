# This list of queries configures an OTel SQL Query Receiver to read pgMonitor
# metrics from Postgres.
#
# https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/-/receiver/sqlqueryreceiver#metrics-queries
# https://github.com/CrunchyData/pgmonitor/blob/development/sql_exporter/common/crunchy_global_collector.yml

# NOTE: Some of the columns below can return NULL values, for which sqlqueryreceiver will warn.
# Those columns are idx_scan and idx_tup_fetch. We now use COALESCE to return 0 as a default.
  - sql: >
      SELECT
        current_database() as dbname
        , p.schemaname
        , p.relname
        , p.seq_scan
        , p.seq_tup_read
        , COALESCE(p.idx_scan, 0) AS idx_scan
        , COALESCE(p.idx_tup_fetch, 0) as idx_tup_fetch
        , p.n_tup_ins
        , p.n_tup_upd
        , p.n_tup_del
        , p.n_tup_hot_upd
        , 0::bigint AS n_tup_newpage_upd
        , p.n_live_tup
        , p.n_dead_tup
        , p.vacuum_count
        , p.autovacuum_count
        , p.analyze_count
        , p.autoanalyze_count
      FROM pg_catalog.pg_stat_user_tables p;
    metrics:
      - metric_name: ccp_stat_user_tables_analyze_count 
        data_type: sum
        value_column: analyze_count
        description: Number of times this table has been manually analyzed
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      - metric_name: ccp_stat_user_tables_autoanalyze_count 
        data_type: sum
        value_column: autoanalyze_count
        description: Number of times this table has been analyzed by the autovacuum daemon
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      - metric_name: ccp_stat_user_tables_autovacuum_count 
        data_type: sum
        value_column: autovacuum_count
        description: Number of times this table has been vacuumed by the autovacuum daemon
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      - metric_name: ccp_stat_user_tables_idx_scan 
        data_type: sum
        value_column: idx_scan
        description: Number of index scans initiated on this table
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      - metric_name: ccp_stat_user_tables_idx_tup_fetch 
        data_type: sum
        value_column: idx_tup_fetch
        description: Number of live rows fetched by index scans
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      - metric_name: ccp_stat_user_tables_n_dead_tup 
        value_column: n_dead_tup
        description: Estimated number of dead rows
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      # FIXME: This metric returns 0, when the query returns 1 for relname="pgbackrest_info",schemaname="pg_temp_33".
      # The issue doesn't occur with gte_pg16.
      - metric_name: ccp_stat_user_tables_n_live_tup 
        value_column: n_live_tup
        description: Estimated number of live rows
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      - metric_name: ccp_stat_user_tables_n_tup_del 
        data_type: sum
        value_column: n_tup_del
        description: Number of rows deleted
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      - metric_name: ccp_stat_user_tables_n_tup_hot_upd 
        data_type: sum
        value_column: n_tup_hot_upd
        description: Number of rows HOT updated (i.e., with no separate index update required)
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      # FIXME: This metric returns 0, when the query returns 1 for relname="pgbackrest_info",schemaname="pg_temp_33".
      # The issue doesn't occur with gte_pg16.
      - metric_name: ccp_stat_user_tables_n_tup_ins 
        data_type: sum
        value_column: n_tup_ins
        description: Number of rows inserted
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      - metric_name: ccp_stat_user_tables_n_tup_upd 
        data_type: sum
        value_column: n_tup_upd
        description: Number of rows updated
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      # FIXME: This metric returns 0, when the query returns 1 for relname="pgbackrest_info",schemaname="pg_temp_33".
      # The issue doesn't occur with gte_pg16.
      - metric_name: ccp_stat_user_tables_seq_scan 
        data_type: sum
        value_column: seq_scan
        description: Number of sequential scans initiated on this table
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      # FIXME: This metric returns 0, when the query returns 1 for relname="pgbackrest_info",schemaname="pg_temp_33".
      # The issue doesn't occur with gte_pg16.
      - metric_name: ccp_stat_user_tables_seq_tup_read 
        data_type: sum
        value_column: seq_tup_read
        description: Number of live rows fetched by sequential scans
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
      - metric_name: ccp_stat_user_tables_vacuum_count 
        data_type: sum
        value_column: vacuum_count
        description: Number of times this table has been manually vacuumed (not counting VACUUM FULL)
        attribute_columns: ["dbname", "relname", "schemaname"]
        static_attributes:
          server: "localhost:5432"
