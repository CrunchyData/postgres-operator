---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
  - script: |
      set -e
      PRIMARY=$(
        kubectl get pod --namespace "${NAMESPACE}" \
          --output name --selector '
            postgres-operator.crunchydata.com/cluster=exporter,
            postgres-operator.crunchydata.com/role=master'
      )

      # TODO: We have no notion of exporter readiness.
      for _ in $(seq 10); do
        kubectl exec --namespace "${NAMESPACE}" "${PRIMARY}" -c exporter \
          -- curl --head --silent 'http://localhost:9187/metrics' && break
        sleep 1
      done

      # Ensure that the metrics endpoint is available from inside the exporter container
      {
        METRICS=$(kubectl exec --namespace "${NAMESPACE}" \
          "${PRIMARY}" -c exporter \
          -- curl --show-error --silent 'http://localhost:9187/metrics')
      } || {
        echo >&2 'curl metrics endpoint returned error'
        echo "${METRICS}"
        exit 1
      }

      LOGS=$(kubectl logs --namespace "${NAMESPACE}" "${PRIMARY}" -c exporter)
      contains() { bash -ceu '[[ "$1" == *"$2"* ]]' - "$@"; }
      {
        contains "${LOGS}" 'TLS is disabled'
      } || {
        echo >&2 'tls is enabled'
        echo "${LOGS}"
        exit 1
      }

      # Ensure that the monitoring user exists and is configured.
      kubectl exec --stdin --namespace "${NAMESPACE}" "${PRIMARY}" -c database \
        -- psql -qb --set ON_ERROR_STOP=1 --file=- <<'SQL'
        DO $$
        DECLARE
          result record;
        BEGIN
          SELECT * INTO result FROM pg_catalog.pg_roles WHERE rolname = 'ccp_monitoring';
          ASSERT FOUND, 'user not found';
        END $$
      SQL
