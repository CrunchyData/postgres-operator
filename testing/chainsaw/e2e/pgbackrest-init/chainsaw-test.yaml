# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  creationTimestamp: null
  name: pgbackrest-init
spec:
  steps:
  - name: step-00
    try:
    - apply:
        file: 00--cluster.yaml
    - assert:
        file: 00-assert.yaml
  - name: step-01
    try:
    - script:
        content: CLUSTER=init-pgbackrest ../../scripts/pgbackrest-initialization.sh
          "mixed" 1
  - name: step-02
    try:
    - command:
        args:
        - annotate
        - -n
        - $NAMESPACE
        - postgrescluster
        - init-pgbackrest
        - postgres-operator.crunchydata.com/pgbackrest-backup=manual
        entrypoint: kubectl
    - assert:
        file: 02-assert.yaml
  - name: step-03
    try:
    - script:
        content: CLUSTER=init-pgbackrest ../../scripts/pgbackrest-initialization.sh
          "ok" 2
  - name: step-04
    try:
    - apply:
        file: 04--cluster.yaml
    - assert:
        file: 04-assert.yaml
  - name: step-05
    try:
    - script:
        content: |
          # Assumes the cluster only has a single replica
          NEW_REPLICA=$(
              kubectl get pod --namespace "${NAMESPACE}" \
                --output name --selector '
                  postgres-operator.crunchydata.com/cluster=init-pgbackrest,
                  postgres-operator.crunchydata.com/role=replica'
            )

          LIST=$(
          kubectl exec --namespace "${NAMESPACE}" "${NEW_REPLICA}" -- \
            ls /pgdata/pg${KUTTL_PG_VERSION}/
          )

          contains() { bash -ceu '[[ "$1" == *"$2"* ]]' - "$@"; }
          {
            !(contains "${LIST}" 'recovery.signal')
          } || {
            echo >&2 'Signal file(s) found'
            echo "${LIST}"
            exit 1
          }
