apiVersion: chainsaw.kyverno.io/v1alpha1
kind: StepTemplate
metadata:
  name: change-parameters
spec:
  try:
    -
      description: >
        Read the timestamp at which PostgreSQL last started
      script:
        outputs: [{ name: before, value: (trim_space($stdout)) }]
        content: |
          PRIMARY=$(
            kubectl get pod --namespace "${NAMESPACE}" \
              --output name --selector '
                postgres-operator.crunchydata.com/cluster=original,
                postgres-operator.crunchydata.com/role=master'
          )

          kubectl exec --namespace "${NAMESPACE}" "${PRIMARY}" \
            -- psql -qAt --command 'SELECT pg_postmaster_start_time()'

    - patch:
        resource:
          apiVersion: postgres-operator.crunchydata.com/v1beta1
          kind: PostgresCluster
          metadata:
            name: original
          spec:
            config:
              parameters: ($parameters)

    -
      description: >
        Wait for Postgres to restart, signal the WAL archiver, then wait for WAL to archive
      script:
        timeout: 30s
        env: [{ name: BEFORE, value: ($before) }]
        content: |
          PRIMARY=$(
            kubectl get pod --namespace "${NAMESPACE}" \
              --output name --selector '
                postgres-operator.crunchydata.com/cluster=original,
                postgres-operator.crunchydata.com/role=master'
          )

          while true; do
            START=$(
              kubectl exec --namespace "${NAMESPACE}" "${PRIMARY}" \
                -- psql -qAt --command 'SELECT pg_postmaster_start_time()'
            )
            if [ "${START}" ] && [ "${START}" != "${BEFORE}" ]; then break; else sleep 1; fi
          done
          echo "${START} != ${BEFORE}"

          kubectl exec --namespace "${NAMESPACE}" "${PRIMARY}" \
            -- psql -qb --command "SELECT pg_stat_reset_shared('archiver')" --command 'SELECT pg_switch_wal()'

          while [ 0 = "$(
            kubectl exec --namespace "${NAMESPACE}" "${PRIMARY}" \
              -- psql -qAt --command 'SELECT archived_count FROM pg_stat_archiver'
          )" ]; do sleep 1; done
