apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "postgres-operator.fullname" . }}
  labels:
    app: {{ template "postgres-operator.name" . }}
    chart: {{ template "postgres-operator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "postgres-operator.name" . }}
        release: {{ .Release.Name }}
        name: "postgres-operator"
    spec:
      serviceAccountName: postgres-operator
      containers:
        - name: apiserver
          image: "{{ .Values.env.co_image_prefix }}/pgo-apiserver:{{ .Values.env.co_image_tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext: {}
          ports:
            - containerPort: 8443
          env:
            - name: CRUNCHY_DEBUG
              value: "{{ .Values.env.debug }}"
            - name: PORT
              value: "8443"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: TLS_NO_VERIFY
              value: "{{ .Values.env.tls_no_verify }}"
          volumeMounts:
            - name: pgo-config
              mountPath: /pgo-config
              readOnly: true
            - name: pgo-auth-secret
              mountPath: /pgo-auth-secret
              readOnly: true
        - name: scheduler
          image: "{{ .Values.env.co_image_prefix }}/pgo-scheduler:{{ .Values.env.co_image_tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext: {}
          env:
            - name: TIMEOUT 
              value: "3600"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: pgo-config
              mountPath: /pgo-config
              readOnly: true
        - name: operator
          image: "{{ .Values.env.co_image_prefix }}/postgres-operator:{{ .Values.env.co_image_tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext: {}
          env:
            - name: CRUNCHY_DEBUG
              value: "{{ .Values.env.debug }}"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: pgo-config
              mountPath: /pgo-config
              readOnly: true
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: pgo-config
          configMap:
            name: {{ template "postgres-operator.fullname" . }}-operator
        - name: pgo-auth-secret
          secret:
            secretName: {{ template "postgres-operator.fullname" . }}-apiserver
            defaultMode: 511
